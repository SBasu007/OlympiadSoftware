<%- include("../partials/header.ejs")%>
<div class="add-student-form">
    <form action="/addStudent" method="POST">
        <h3 style="text-align: center; margin-bottom: 20px;">Student Details</h3>
        <% if (typeof error_message !== 'undefined') { %>
          <p style="text-align: center; color:red"><%= error_message %></p>
        <% } %>
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label" for="session">SESSION <span style="color:red">*</span></label>
            <% if (typeof session !== 'undefined') { %>
              <input type="text"  id="session" name="session" value="<%= session %>" disabled required autocomplete="off">
            <% } else { %>
              <input type="text"  id="session" name="session" disabled required autocomplete="off">
            <% } %>
          </div>
          <div class="form-row-element" style="position: relative;">
            <label class="student-label" for="year">SUBJECT <span style="color:red">*</span></label>
            <% if (typeof year !== 'undefined') { %>
              <input type="text" id="year" name="year" value="<%= year %>" list="year-list" autocomplete="off" required>
            <% } else { %>
              <input type="text" id="year" name="year" list="year-list" autocomplete="off" required>
            <% } %>
            <ul id="year-list" class="custom-dropdown"></ul>
            
          </div>
          <div class="form-row-element">
            <label class="student-label"  for="roll">ROLL NO.</label>
            <input type="text"  id="roll" name="roll" autocomplete="off" required >
          </div>  
        </div>
        <div class="form-row">
          <div class="form-row-element" style="position: relative;">
            <label class="student-label"  for="code">CENTER CODE <span style="color:red">*</span></label>
            <% if (typeof code !== 'undefined') { %>
              <input type="text"  id="code" name="code" value="<%= code %>" disabled required autocomplete="off">
            <% } else { %>
              <input type="text"  id="code" name="code" list="code-list" disabled required autocomplete="off">
            <% } %>
            <ul id="code-list" class="custom-dropdown-code"></ul>
          </div>
          
          <div class="form-row-element">
            <label class="student-label"  for="date">ADMISSION DATE</label>
            <input type="text"  id="date" name="date" disabled>
          </div>
        </div>
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label"  for="name">NAME OF APPLICANT <span style="color:red">*</span></label>
            <input type="text" class="student-input" id="name" name="name" style="width:45vw;" disabled required autocomplete="off">
          </div>
        </div>
        
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label"  for="guard_name">GUARDIAN NAME <span style="color:red">*</span></label>
            <input type="text" class="student-input" id="guard_name" name="guard_name" disabled required autocomplete="off">
          </div>
        </div>
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label"  for="district">DISTRICT<span style="color:red">*</span></label>
            <input type="text" class="student-input" id="district" name="district" disabled required autocomplete="off">
          </div>
        </div>
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label" for="lang">LANGUAGE</label>
            <select class="" id="lang" name="lang">
              <option value="english">English</option>
              <option value="bengali">Bengali</option>
            </select>
          </div>
        </div>
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label" for="mode">MODE</label>
            <select class="" id="mode" name="mode">
              <option value="offline">Offline</option>
              <option value="online">Online</option>
            </select>
          </div>
        </div>
        <hr>
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label"  for="name">CENTER NAME</label>
            <div class="center-name output"></div>
          </div>
        </div>
        
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label"  for="add1">CENTER ADDRESS 1</label>
            <div class="center-add1 output"></div>
          </div>
        </div>
        
        <div class="form-row">
          <div class="form-row-element">
            <label class="student-label"  for="add2">CENTER ADDRESS 2</label>
            <div class="center-add2 output"></div>
          </div>
        </div>
        <div class="button-submit">
          <button type="submit" class="btn btn-primary" id="submit" disabled>Add</button>
          <a href="/addStudent" style="margin-left:20px" class="btn btn-primary">Done</a>
          <a href="/home" style="margin-left:20px" class="btn btn-primary">Cancel</a>
        </div>
    </form>
    <div id="roll-dialog" class="custom-dialog" style="display:none;">
      <p>Roll number already exists!</p>
      <button id="close-dialog">Close</button>
  </div>  
</div>    
<script>
  window.onload = function() {
  document.getElementById('roll').focus();
};
  // Date Handling
function postDate() {
  const d = new Date();
  let date = d.getDate() + "." + (d.getMonth() + 1) + "." + d.getFullYear();
  return date;
}

document.addEventListener('DOMContentLoaded', function() {
  document.getElementById('date').value = postDate();
});

// Disable Fields on Page Load
function disableFields() {
  const fields = document.querySelectorAll('input:not(#roll), button[type="submit"]');
  fields.forEach(field => field.disabled = true);
}
disableFields();

// Roll Input Validation
document.getElementById('roll').addEventListener('input', function () {
  const rollInput = this.value;

  if (rollInput.length > 0) {
    fetch(`/checkRollExists?roll=${rollInput}`)
      .then(response => response.json())
      .then(data => {
        if (data.exists) {
          // Show custom dialog
          document.getElementById('roll-dialog').style.display = 'block';
          // Disable all fields except the roll
          document.querySelectorAll('input').forEach(input => {
            if (input.id !== 'roll') {
              input.disabled = true;
            }
          });
        } else {
          // Enable relevant fields (year, code, etc.) after roll validation
          document.querySelectorAll('input').forEach(input => {
            input.disabled = false;
          });
          document.getElementById('submit').disabled = false;
        }
      })
      .catch(error => console.error('Error checking roll:', error));
  }
});

// Close dialog functionality
document.getElementById('close-dialog').addEventListener('click', function () {
  document.getElementById('roll-dialog').style.display = 'none';
  // Re-enable all input fields
  document.querySelectorAll('input').forEach(input => {
    input.disabled = false;
  });
});


// School Code Handling
const codeInput = document.getElementById('code');
const codeList = document.getElementById('code-list');
const nameDiv = document.querySelector('.center-name');
const add1Div = document.querySelector('.center-add1');
const add2Div = document.querySelector('.center-add2');

// Fetch school details on page load if code is pre-filled
if (codeInput.value) {
  fetchSchoolDetails(codeInput.value);
}

// Fetch codes and details based on user input
codeInput.addEventListener('input', function () {
  const query = this.value;

  if (query.length <= 5) {
    fetchCodes(query); // Fetch codes dynamically
  }

  if (query.length > 5) {
    fetchSchoolDetails(query); // Fetch details when a full code is entered (assuming a 5-character code)
  } else {
    resetSchoolDetails(); // Reset school details if code is incomplete
  }
});

// Fetch all codes when input is focused and empty
codeInput.addEventListener('focus', function () {
  if (this.value === '') {
    codeList.style.display = 'block';
    fetchCodes(); // Fetch all codes if input is blank
  }
});

function fetchCodes(query = '') {
  fetch(`/getSchoolCodes?query=${query}`)
    .then(response => response.json())
    .then(data => {
      codeList.innerHTML = ''; // Clear existing options
      data.forEach(code => {
        const listItem = document.createElement('li');
        listItem.textContent = code.code;
        listItem.addEventListener('click', function () {
          codeInput.value = code.code; // Set input value on click
          codeList.style.display = 'none'; // Hide dropdown after selection
          fetchSchoolDetails(code.code); // Fetch details after selecting a code
        });
        codeList.appendChild(listItem); // Add new list item
      });
      codeList.style.display = data.length ? 'block' : 'none'; // Show or hide dropdown based on results
    })
    .catch(error => console.error('Error fetching codes:', error));
}

// Hide dropdown when clicking outside the input field
document.addEventListener('click', function (event) {
  if (!event.target.closest('#code') && !event.target.closest('#code-list')) {
    codeList.style.display = 'none'; // Hide dropdown if clicked outside
  }
});

function fetchSchoolDetails(selectedCode) {
  fetch(`/getSchoolDetails?code=${selectedCode}`)
    .then(response => {
      if (!response.ok) {
        // If the response status is not 200-299, throw an error
        return response.json().then(err => {
          throw new Error(err.error || 'Failed to fetch school details');
        });
      }
      return response.json();
    })
    .then(data => {
      nameDiv.innerText = data.name || 'N/A';
      add1Div.innerText = data.add1 || 'N/A';
      add2Div.innerText = data.add2 || 'N/A';
    })
    .catch(error => {
      console.error('Error fetching school details:', error);
      resetSchoolDetails();
    });
}

// Reset school details if no code is entered or error occurs
function resetSchoolDetails() {
  nameDiv.innerText = 'N/A';
  add1Div.innerText = 'N/A';
  add2Div.innerText = 'N/A';
}


// Year Input Handling
const yearInput = document.getElementById('year');
const yearList = document.getElementById('year-list');

// Fetch years based on user input
yearInput.addEventListener('input', function() {
  const query = this.value;
  fetchYears(query); // Call fetchYears with the current input
});

// Fetch all years or filtered years when input is focused
yearInput.addEventListener('focus', function() {
  const query = this.value;
  fetchYears(query); // Fetch years, even if input is pre-filled
});

// Fetch years from the server based on the query
function fetchYears(query = '') {
  fetch(`/getYears?query=${query}`)
    .then(response => response.json())
    .then(data => {
      yearList.innerHTML = ''; // Clear existing options
      data.forEach(year => {
        const listItem = document.createElement('li');
        listItem.textContent = year.subject;
        listItem.addEventListener('click', function () {
          yearInput.value = year.subject; // Set input value on click
          yearList.style.display = 'none'; // Hide dropdown after selection
        });
        yearList.appendChild(listItem); // Add new list item
      });
      yearList.style.display = data.length ? 'block' : 'none'; // Show or hide dropdown based on results
    })
    .catch(error => console.error('Error fetching years:', error));
}

// Hide dropdown when clicking outside the input field
document.addEventListener('click', function (event) {
  if (!yearInput.contains(event.target) && !yearList.contains(event.target)) {
    yearList.style.display = 'none'; // Hide dropdown if clicked outside
  }
});


</script>

<%- include("../partials/footer.ejs")%>
